/*----- PROTECTED REGION ID(TangoLearn1Class.h) ENABLED START -----*/
//=============================================================================
//
// file :        TangoLearn1Class.h
//
// description : Include file for the TangoLearn1Class class
//
// project :     Tango Learn 1 Class--Product Title
//
//
// Tango Learn 1Class Class--Class Copyright
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef TangoLearn1Class_H
#define TangoLearn1Class_H

#include <tango.h>


/*----- PROTECTED REGION END -----*/	//	TangoLearn1Class.h

/**
 *  TangoLearn1Class class description:
 *    Tango Learn 1 Class--Class Description
 */

namespace TangoLearn1Class_ns
{
/*----- PROTECTED REGION ID(TangoLearn1Class::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	TangoLearn1Class::Additional Class Declarations

class TangoLearn1Class : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(TangoLearn1Class::Data Members) ENABLED START -----*/

//	Add your own data members

/*----- PROTECTED REGION END -----*/	//	TangoLearn1Class::Data Members

//	Device property data members
public:
	//	tango_learn1_device_property1:	Tango Learn1 Device Property1
	string	tango_learn1_device_property1;


//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	TangoLearn1Class(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	TangoLearn1Class(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	TangoLearn1Class(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */
	~TangoLearn1Class() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Read the device properties from database
	 */
	void get_device_property();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : TangoLearn1Class::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);


	//--------------------------------------------------------
	/**
	 *	Method      : TangoLearn1Class::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();




//	Command related methods
public:
	/**
	 *	Command tango_learn1_command1 related method
	 *	Description: Tango Learn1 Command1
	 *
	 */
	virtual void tango_learn1_command1();
	virtual bool is_tango_learn1_command1_allowed(const CORBA::Any &any);


	//--------------------------------------------------------
	/**
	 *	Method      : TangoLearn1Class::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(TangoLearn1Class::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

/*----- PROTECTED REGION END -----*/	//	TangoLearn1Class::Additional Method prototypes
};

/*----- PROTECTED REGION ID(TangoLearn1Class::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	TangoLearn1Class::Additional Classes Definitions

}	//	End of namespace

#endif   //	TangoLearn1Class_H
